@import "~@angular/material/theming";
@include mat-core();

@font-face {
  font-family: "Manrope";
  src: local("Manrope"), url(./assets/fonts/Manrope.ttf) format("truetype");
}

$primary-mat-color: (
  Main: #0f2060,
  Light: #44478e,
  Dark: #000036,
  contrast: (
    Main: #fff,
    Light: #fff,
    Dark: #fff,
  ),
);
$accent-mat-color: (
  Main: #ff9100,
  Light: #ffc246,
  Dark: #c56200,
  contrast: (
    Main: #000,
    Light: #000,
    Dark: #000,
  ),
);

$primary-mat-palette: mat-palette($primary-mat-color, Main, Light, Dark);
$accent-mat-palette: mat-palette($accent-mat-color, Main, Light, Dark);
$warning-mat-palette: mat-palette($mat-red);

$mat-theme: mat-dark-theme(
  (
    color: (
      primary: $primary-mat-palette,
      accent: $accent-mat-palette,
      warning: $warning-mat-palette,
    ),
  )
);

@include angular-material-theme($mat-theme);

html,
body {
  height: 100%;
  background-color: mat-color($primary-mat-color, Dark);
  color: white;
  scroll-behavior: smooth;
}

body {
  margin: 0;
  font-family: Manrope, "Helvetica Neue", sans-serif;
}

h1,
h2,
h3,
h4,
h5,
p,
ul {
  padding: 0 !important;
  margin: 0 !important;
}

@mixin topBarExtended($true) {
  @if $true {
    padding-top: 0.5em;
    padding-bottom: 0.7em;
    box-shadow: none !important;
  } @else {
    padding-top: 0em;
    padding-bottom: 0em;
    box-shadow: 0 10px 16px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19) !important;
  }
}
@keyframes topBarScroll {
  from {
    @include topBarExtended(true);
  }
  to {
    @include topBarExtended(false);
  }
}

@keyframes topBarUnScroll {
  from {
    @include topBarExtended(false);
  }
  to {
    @include topBarExtended(true);
  }
}

.sticky {
  position: fixed;
}

.topBar {
  z-index: 5;
  width: 100%;
  padding-left: 1em;
  padding-right: 1em;
  font-weight: bold;
  background-color: mat-color($primary-mat-color, Main);
  @include topBarExtended(true);
  animation-name: topBarUnScroll;
  animation-duration: 0.2s;
  &.scroll {
    @include topBarExtended(false);
    animation-name: topBarScroll;
    animation-duration: 0.2s;
  }
  a {
    text-decoration: none;
    transition: 0.1s ease;
    &:hover {
      color: mat-color($accent-mat-color, Main);
      transition: 0.1s ease;
    }
  }
}

.links a {
  color: mat-color($accent-mat-color, Light);
  filter: sepia(0%) saturate(0) hue-rotate(315deg);
  transition: 0.5s ease;
  &:hover {
    filter: sepia(100%) saturate(300) hue-rotate(315deg);
    transition: 0.5s ease;
  }
  mat-icon {
    width: 1em !important;
  }
}

.accentedText {
  color: mat-color($accent-mat-color, Main);
}

@mixin aboutExtended($true) {
  @if $true {
    min-height: calc(100vh - 4em);
  } @else {
    min-height: 25em;
  }
}
@keyframes aboutScroll {
  from {
    @include aboutExtended(true);
  }
  to {
    @include aboutExtended(false);
  }
}

@keyframes aboutUnScroll {
  from {
    @include aboutExtended(false);
  }
  to {
    @include aboutExtended(true);
  }
}

.about {
  padding-top: 3em;
  padding-bottom: 3em;
  padding-left: 1em;
  padding-right: 1em;
  .onlyExtended {
    opacity: 100%;
    transition: 1s ease;
  }
  @include aboutExtended(true);
  animation-name: aboutUnScroll;
  animation-duration: 0.4s;
  &.scroll {
    @include aboutExtended(false);
    animation-name: aboutScroll;
    animation-duration: 0.4s;
    .onlyExtended {
      opacity: 0%;
      transition: 0.4s ease;
    }
  }
}

.centerText {
  text-align: center;
}

.lightBackground {
  background-color: mat-color($primary-mat-color, Main);
}

.me {
  border: 0.5em solid mat-color($primary-mat-color, Dark);
  border-radius: 100%;
  width: 10em;
}

a {
  color: inherit;
}

.stdPadding {
  padding: 1em !important;
}

.doublePaddingRight {
  padding-right: 2em !important;
}

.stdPaddingVertical {
  padding-top: 1em;
  padding-bottom: 1em;
}

.fillHeight {
  height: 100vh;
}

@mixin hidden($true) {
  @if $true {
    display: none;
    opacity: 0%;
  } @else {
    display: static;
    opacity: 100%;
  }
}

@keyframes fadeIn {
  from {
    @include hidden(true);
  }
  to {
    @include hidden(false);
  }
}

.hidden {
  @include hidden(true);
}

.bold {
  font-weight: bold;
}

@mixin menuShown($true) {
  @if $true {
    right: 0px;
  } @else {
    right: -100vw;
  }
}
@keyframes hideMenu {
  from {
    @include menuShown(true);
  }
  to {
    @include menuShown(false);
  }
}

@keyframes showMenu {
  from {
    @include menuShown(false);
  }
  to {
    @include menuShown(true);
  }
}
.menuOverlay {
  z-index: 10;
  position: fixed;
  top: 0;
  height: 100vh;
  width: 100vw;
  background-color: mat-color($primary-mat-color, Main);
  font-weight: bold;
  @include menuShown(false);
  animation-name: hideMenu;
  animation-duration: 0.2s;
  &.show {
    @include menuShown(true);
    animation-name: showMenu;
    animation-duration: 0.2s;
  }
  a {
    text-decoration: none;
    transition: 0.1s ease;
    &:hover {
      color: mat-color($accent-mat-color, Main);
      transition: 0.1s ease;
    }
  }
}

.placeholder {
  min-height: 15em !important;
}

:target:before {
  content: "";
  display: block;
  height: 4em;
  margin: -4em 0 0;
}

.floating {
  animation-name: floating;
  animation-duration: 3s;
  animation-iteration-count: infinite;
  animation-timing-function: ease-in-out;
  margin-left: 30px;
  margin-top: 5px;
}

@keyframes floating {
  0% {
    transform: translate(0, 0px);
  }
  50% {
    transform: translate(0, 15px);
  }
  100% {
    transform: translate(0, -0px);
  }
}

@mixin invisible($true) {
  @if $true {
    opacity: 0%;
  } @else {
    opacity: 100%;
  }
}
@keyframes show {
  from {
    @include invisible(true);
  }
  to {
    @include invisible(false);
  }
}

@keyframes hide {
  from {
    @include invisible(false);
  }
  to {
    @include invisible(true);
  }
}
.fadeIntoView,
.fadeIn {
  @include invisible(true);
  animation-name: hide;
  animation-duration: 0.75s;
  &.show {
    @include invisible(false);
    animation-name: show;
    animation-duration: 0.75s;
  }
}

.logo {
  border: 0.5em solid mat-color($primary-mat-color, Main);
  border-radius: 100%;
  width: 5em;
}

.width1em {
  width: 1em !important;
}
